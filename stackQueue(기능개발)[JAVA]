class Solution {
    public int[] solution(int[] progresses, int[] speeds) {
        int[] answer = {};
        int[] t = new int[progresses.length];
        int k=1,count=1,temp,index=0;
        
        /* 1. progresses의 배열길이만큼 임시배열 t를 만든다.
         * 2. progresses[i] + speeds[i]*x >= 100 이 되는 x 값을 t[i]에 저장한다.
         * 		ex) progresses = 93 30 55 60 59 62 61
         * 			    speeds =  1 30  5 20 20 20 20
         * 
         *                   t =  7  3  9  2  3  2  2
         * 가 되도록 코드를 짰음
         */
        
        for(int i=0 ;i<progresses.length;i++)
        {
           while(true)
           {
              if(progresses[i]+k*speeds[i]>=100)
              {
                 t[i] = k;
                 break;
              }
              k++;
           }
           k=1;
        }
        
        /*
         * 이제 return 할 answer배열의 길이를 알아야하는데, 물론 arraylist 클래스를 써서 가변배열로 처리 가능 할 거 같음.
         * 여기서는 배열의 크기를 처음부터 초기화 하기 위해서 크기를 구하는 식을 썼음.
         * 밑에서 count의 최종값은 answer배열의 크기.
         */
        
        temp=t[0];
        for(int i=0;i<t.length;i++)
        {
           if(t[i]>temp)
           {
              count++;
              temp=t[i];
           }
        }
        answer = new int[count]; //answer 배열 크기를 알았으므로 초기화

        /*
         * answer배열에 값을 넣어주는 과정.
         * temp = t[0]으로 초기화 한후, 비교하면서 넘어가다가 t[i] > temp 이면 answer[index] = count인 방식.
         * answer배열 제일 마지막 값은 for문 안에서 할당 받지 못하므로, for문 밖에서 마지막 값만 넣어주면 끝!
         */
        
        count =0;
        temp=t[0];
        for(int i=0;i<t.length;i++)
        {
         if(t[i]>temp)
         {
        	 temp=t[i];
        	 answer[index++]=count;
        	 count=0;
         }
        count++;
        }
        answer[index]=count;
        for(int i=0;i<t.length;i++)
            System.out.print(t[i]+" ");
        System.out.print("\n");
        return answer;
    }
}
public class stackQ {
   public static void main(String[] args)
   {
      int []progresses = {93,30,55,60,59,62,61};
      int []speeds = {1,30,5,20,20,20,20};
      
      Solution s = new Solution();
      int []answer=s.solution(progresses, speeds);
      for(int i=0;i<answer.length;i++)
         System.out.println(answer[i]);
   }
}
